//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace Comparsa.Data
{
	/// <summary>
	/// Database       : COMPARSA
	/// Data Source    : localhost
	/// Server Version : WI-V2.5.6.27020 Firebird 2.5/tcp (julio-pc)/P12
	/// </summary>
	public partial class COMPARSADB : LinqToDB.Data.DataConnection
	{
		public ITable<AFECTADO>     AFECTADOes     { get { return this.GetTable<AFECTADO>(); } }
		public ITable<ARTICULO>     ARTICULOes     { get { return this.GetTable<ARTICULO>(); } }
		public ITable<COLABORADOR>  COLABORADORs   { get { return this.GetTable<COLABORADOR>(); } }
		public ITable<ENTRADA>      ENTRADAs       { get { return this.GetTable<ENTRADA>(); } }
		public ITable<LOCALIDAD>    LOCALIDADs     { get { return this.GetTable<LOCALIDAD>(); } }
		public ITable<TIPOARTICULO> TIPOARTICULOes { get { return this.GetTable<TIPOARTICULO>(); } }

		public COMPARSADB()
		{
			InitDataContext();
		}

		public COMPARSADB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("AFECTADO")]
	public partial class AFECTADO
	{
		[PrimaryKey, NotNull    ] public int    AFECTADOID  { get; set; } // integer
		[Column,        Nullable] public string CODIGO      { get; set; } // varchar(10)
		[Column,        Nullable] public string NOMBRE      { get; set; } // varchar(100)
		/// <summary>
		/// 1=Por revisar
		/// 2=Afectación menor
		/// 3=Afectación mayor
		/// 4=Sin daños
		/// 5=Atendido
		/// </summary>
		[Column,        Nullable] public int?   ESTATUS     { get; set; } // integer
		[Column,        Nullable] public string CALLE       { get; set; } // varchar(50)
		[Column,        Nullable] public string NUMEXT      { get; set; } // varchar(10)
		[Column,        Nullable] public string NUMINT      { get; set; } // varchar(10)
		[Column,        Nullable] public string COLONIA     { get; set; } // varchar(50)
		[Column,        Nullable] public string MUNICIPIO   { get; set; } // varchar(50)
		[Column,        Nullable] public string ESTADO      { get; set; } // varchar(50)
		[Column,        Nullable] public string TELEFONO    { get; set; } // varchar(50)
		[Column,        Nullable] public string EMAIL       { get; set; } // varchar(50)
		[Column,        Nullable] public string TWITTER     { get; set; } // varchar(200)
		[Column,        Nullable] public string FACEBOOK    { get; set; } // varchar(200)
		[Column,        Nullable] public string DICTAMEN    { get; set; } // blob sub_type 1
		[Column,        Nullable] public string NOTAS       { get; set; } // blob sub_type 1
		[Column,        Nullable] public int?   LOCALIDADID { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_AFECTADO_LOCALIDAD
		/// </summary>
		[Association(ThisKey="LOCALIDADID", OtherKey="LOCALIDADID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_AFECTADO_LOCALIDAD", BackReferenceName="AFECTADOes")]
		public LOCALIDAD LOCALIDAD { get; set; }

		#endregion
	}

	[Table("ARTICULO")]
	public partial class ARTICULO
	{
		[PrimaryKey, NotNull    ] public int    ARTICULOID     { get; set; } // integer
		[Column,        Nullable] public string CODIGO         { get; set; } // varchar(20)
		[Column,        Nullable] public string NOMBRE         { get; set; } // varchar(100)
		[Column,        Nullable] public int?   TIPOARTICULOID { get; set; } // integer
		[Column,        Nullable] public int?   TOTALENTRADAS  { get; set; } // integer
		[Column,        Nullable] public int?   TOTALSALIDAS   { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_ARTICULO_TIPOARTICULO
		/// </summary>
		[Association(ThisKey="TIPOARTICULOID", OtherKey="TIPOARTICULOID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_ARTICULO_TIPOARTICULO", BackReferenceName="ARTICULOes")]
		public TIPOARTICULO TIPOARTICULO { get; set; }

		#endregion
	}

	[Table("COLABORADOR")]
	public partial class COLABORADOR
	{
		[PrimaryKey, NotNull    ] public int    COLABORADORID { get; set; } // integer
		[Column,        Nullable] public string CODIGO        { get; set; } // varchar(10)
		[Column,        Nullable] public string NOMBRE        { get; set; } // varchar(100)
		[Column,        Nullable] public string CALLE         { get; set; } // varchar(50)
		[Column,        Nullable] public string NUMEXT        { get; set; } // varchar(10)
		[Column,        Nullable] public string NUMINT        { get; set; } // varchar(10)
		[Column,        Nullable] public string COLONIA       { get; set; } // varchar(50)
		[Column,        Nullable] public string MUNICIPIO     { get; set; } // varchar(50)
		[Column,        Nullable] public string ESTADO        { get; set; } // varchar(50)
		[Column,        Nullable] public short? ESBRIGADISTA  { get; set; } // smallint
		[Column,        Nullable] public short? ESDONANTE     { get; set; } // smallint
		[Column,        Nullable] public string INSTITUCION   { get; set; } // varchar(100)
		[Column,        Nullable] public string NOTAS         { get; set; } // blob sub_type 1
		[Column,        Nullable] public string TWITTER       { get; set; } // varchar(200)
		[Column,        Nullable] public string FACEBOOK      { get; set; } // varchar(200)
		[Column,        Nullable] public string TELEFONO      { get; set; } // varchar(50)
		[Column,        Nullable] public string EMAIL         { get; set; } // varchar(50)
		[Column,        Nullable] public string POBLACION     { get; set; } // varchar(50)
		[Column,        Nullable] public string REFERIDOPOR   { get; set; } // varchar(100)
	}

	[Table("ENTRADA")]
	public partial class ENTRADA
	{
		[PrimaryKey, NotNull    ] public int       ENTRADAID     { get; set; } // integer
		[Column,        Nullable] public string    NUMERO        { get; set; } // varchar(10)
		[Column,        Nullable] public DateTime? FECHA         { get; set; } // date
		[Column,        Nullable] public TimeSpan? HORA          { get; set; } // time
		[Column,        Nullable] public int?      DONANTEID     { get; set; } // integer
		[Column,        Nullable] public int?      RESPONSABLEID { get; set; } // integer
		[Column,        Nullable] public string    NOTAS         { get; set; } // blob sub_type 1
	}

	[Table("LOCALIDAD")]
	public partial class LOCALIDAD
	{
		[PrimaryKey, NotNull    ] public int    LOCALIDADID { get; set; } // integer
		[Column,        Nullable] public string NOMBRE      { get; set; } // varchar(100)
		[Column,        Nullable] public string ESTADO      { get; set; } // varchar(50)
		[Column,        Nullable] public string MUNICIPIO   { get; set; } // varchar(50)
		[Column,        Nullable] public string NOTAS       { get; set; } // blob sub_type 1

		#region Associations

		/// <summary>
		/// FK_AFECTADO_LOCALIDAD_BackReference
		/// </summary>
		[Association(ThisKey="LOCALIDADID", OtherKey="LOCALIDADID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AFECTADO> AFECTADOes { get; set; }

		#endregion
	}

	[Table("TIPOARTICULO")]
	public partial class TIPOARTICULO
	{
		[PrimaryKey, NotNull    ] public int    TIPOARTICULOID { get; set; } // integer
		[Column,        Nullable] public string NOMBRE         { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_ARTICULO_TIPOARTICULO_BackReference
		/// </summary>
		[Association(ThisKey="TIPOARTICULOID", OtherKey="TIPOARTICULOID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<ARTICULO> ARTICULOes { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static AFECTADO Find(this ITable<AFECTADO> table, int AFECTADOID)
		{
			return table.FirstOrDefault(t =>
				t.AFECTADOID == AFECTADOID);
		}

		public static ARTICULO Find(this ITable<ARTICULO> table, int ARTICULOID)
		{
			return table.FirstOrDefault(t =>
				t.ARTICULOID == ARTICULOID);
		}

		public static COLABORADOR Find(this ITable<COLABORADOR> table, int COLABORADORID)
		{
			return table.FirstOrDefault(t =>
				t.COLABORADORID == COLABORADORID);
		}

		public static ENTRADA Find(this ITable<ENTRADA> table, int ENTRADAID)
		{
			return table.FirstOrDefault(t =>
				t.ENTRADAID == ENTRADAID);
		}

		public static LOCALIDAD Find(this ITable<LOCALIDAD> table, int LOCALIDADID)
		{
			return table.FirstOrDefault(t =>
				t.LOCALIDADID == LOCALIDADID);
		}

		public static TIPOARTICULO Find(this ITable<TIPOARTICULO> table, int TIPOARTICULOID)
		{
			return table.FirstOrDefault(t =>
				t.TIPOARTICULOID == TIPOARTICULOID);
		}
	}
}
