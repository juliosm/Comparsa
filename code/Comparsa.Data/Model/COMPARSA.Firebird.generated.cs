//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/t4models).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace Comparsa.Data
{
	/// <summary>
	/// Database       : COMPARSA
	/// Data Source    : localhost
	/// Server Version : WI-V2.5.7.27050 Firebird 2.5/tcp (JULIO-TP)/P12
	/// </summary>
	public partial class COMPARSADB : LinqToDB.Data.DataConnection
	{
		public ITable<AFECTADO>    AFECTADOes   { get { return this.GetTable<AFECTADO>(); } }
		public ITable<AFECTADOREQ> AFECTADOREQs { get { return this.GetTable<AFECTADOREQ>(); } }
		public ITable<COLABORADOR> COLABORADORs { get { return this.GetTable<COLABORADOR>(); } }
		public ITable<ENTRADA>     ENTRADAs     { get { return this.GetTable<ENTRADA>(); } }
		public ITable<INSUMO>      INSUMOes     { get { return this.GetTable<INSUMO>(); } }
		public ITable<LOCALIDAD>   LOCALIDADs   { get { return this.GetTable<LOCALIDAD>(); } }
		public ITable<TIPOINSUMO>  TIPOINSUMOes { get { return this.GetTable<TIPOINSUMO>(); } }

		public COMPARSADB()
		{
			InitDataContext();
		}

		public COMPARSADB(string configuration)
			: base(configuration)
		{
			InitDataContext();
		}

		partial void InitDataContext();
	}

	[Table("AFECTADO")]
	public partial class AFECTADO
	{
		[PrimaryKey, NotNull    ] public int    AFECTADOID  { get; set; } // integer
		[Column,        Nullable] public string CODIGO      { get; set; } // varchar(10)
		[Column,        Nullable] public string NOMBRE      { get; set; } // varchar(100)
		/// <summary>
		/// 1=Por revisar
		/// 2=Afectación menor
		/// 3=Afectación mayor
		/// 4=Sin daños
		/// 5=Atendido
		/// </summary>
		[Column,        Nullable] public int?   ESTATUS     { get; set; } // integer
		[Column,        Nullable] public string CALLE       { get; set; } // varchar(50)
		[Column,        Nullable] public string NUMEXT      { get; set; } // varchar(10)
		[Column,        Nullable] public string NUMINT      { get; set; } // varchar(10)
		[Column,        Nullable] public string COLONIA     { get; set; } // varchar(50)
		[Column,        Nullable] public int?   LOCALIDADID { get; set; } // integer
		[Column,        Nullable] public string MUNICIPIO   { get; set; } // varchar(50)
		[Column,        Nullable] public string ESTADO      { get; set; } // varchar(50)
		[Column,        Nullable] public string TELEFONO    { get; set; } // varchar(50)
		[Column,        Nullable] public string EMAIL       { get; set; } // varchar(50)
		[Column,        Nullable] public string TWITTER     { get; set; } // varchar(200)
		[Column,        Nullable] public string FACEBOOK    { get; set; } // varchar(200)
		[Column,        Nullable] public string DICTAMEN    { get; set; } // blob sub_type 1
		[Column,        Nullable] public string NOTAS       { get; set; } // blob sub_type 1

		#region Associations

		/// <summary>
		/// FK_AFECTADOREQ_AFECTADO_BackReference
		/// </summary>
		[Association(ThisKey="AFECTADOID", OtherKey="AFECTADOID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AFECTADOREQ> AFECTADOREQs { get; set; }

		/// <summary>
		/// FK_AFECTADO_LOCALIDAD
		/// </summary>
		[Association(ThisKey="LOCALIDADID", OtherKey="LOCALIDADID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_AFECTADO_LOCALIDAD", BackReferenceName="AFECTADOes")]
		public LOCALIDAD LOCALIDAD { get; set; }

		#endregion
	}

	[Table("AFECTADOREQ")]
	public partial class AFECTADOREQ
	{
		[PrimaryKey, NotNull    ] public int  AFECTADOREQID { get; set; } // integer
		[Column,        Nullable] public int? AFECTADOID    { get; set; } // integer
		[Column,        Nullable] public int? TIPOINSUMOID  { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_AFECTADOREQ_AFECTADO
		/// </summary>
		[Association(ThisKey="AFECTADOID", OtherKey="AFECTADOID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_AFECTADOREQ_AFECTADO", BackReferenceName="AFECTADOREQs")]
		public AFECTADO AFECTADO { get; set; }

		/// <summary>
		/// FK_AFECTADOREQ_TIPOINSUMO
		/// </summary>
		[Association(ThisKey="TIPOINSUMOID", OtherKey="TIPOINSUMOID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_AFECTADOREQ_TIPOINSUMO", BackReferenceName="AFECTADOREQs")]
		public TIPOINSUMO TIPOINSUMO { get; set; }

		#endregion
	}

	[Table("COLABORADOR")]
	public partial class COLABORADOR
	{
		[PrimaryKey, NotNull    ] public int    COLABORADORID { get; set; } // integer
		[Column,        Nullable] public string CODIGO        { get; set; } // varchar(10)
		[Column,        Nullable] public string NOMBRE        { get; set; } // varchar(100)
		[Column,        Nullable] public string CALLE         { get; set; } // varchar(50)
		[Column,        Nullable] public string NUMEXT        { get; set; } // varchar(10)
		[Column,        Nullable] public string NUMINT        { get; set; } // varchar(10)
		[Column,        Nullable] public string COLONIA       { get; set; } // varchar(50)
		[Column,        Nullable] public string MUNICIPIO     { get; set; } // varchar(50)
		[Column,        Nullable] public string ESTADO        { get; set; } // varchar(50)
		[Column,        Nullable] public short? ESBRIGADISTA  { get; set; } // smallint
		[Column,        Nullable] public short? ESDONANTE     { get; set; } // smallint
		[Column,        Nullable] public string INSTITUCION   { get; set; } // varchar(100)
		[Column,        Nullable] public string NOTAS         { get; set; } // blob sub_type 1
		[Column,        Nullable] public string TWITTER       { get; set; } // varchar(200)
		[Column,        Nullable] public string FACEBOOK      { get; set; } // varchar(200)
		[Column,        Nullable] public string TELEFONO      { get; set; } // varchar(50)
		[Column,        Nullable] public string EMAIL         { get; set; } // varchar(50)
		[Column,        Nullable] public string POBLACION     { get; set; } // varchar(50)
		[Column,        Nullable] public string REFERIDOPOR   { get; set; } // varchar(100)
	}

	[Table("ENTRADA")]
	public partial class ENTRADA
	{
		[PrimaryKey, NotNull    ] public int       ENTRADAID     { get; set; } // integer
		[Column,        Nullable] public string    NUMERO        { get; set; } // varchar(10)
		[Column,        Nullable] public DateTime? FECHA         { get; set; } // date
		[Column,        Nullable] public TimeSpan? HORA          { get; set; } // time
		[Column,        Nullable] public int?      DONANTEID     { get; set; } // integer
		[Column,        Nullable] public int?      RESPONSABLEID { get; set; } // integer
		[Column,        Nullable] public string    NOTAS         { get; set; } // blob sub_type 1
	}

	[Table("INSUMO")]
	public partial class INSUMO
	{
		[PrimaryKey, NotNull    ] public int    INSUMOID      { get; set; } // integer
		[Column,        Nullable] public string CODIGO        { get; set; } // varchar(20)
		[Column,        Nullable] public string NOMBRE        { get; set; } // varchar(100)
		[Column,        Nullable] public int?   TIPOINSUMOID  { get; set; } // integer
		[Column,        Nullable] public int?   TOTALENTRADAS { get; set; } // integer
		[Column,        Nullable] public int?   TOTALSALIDAS  { get; set; } // integer
		[Column,        Nullable] public int?   EXISTENCIA    { get; set; } // integer
		[Column,        Nullable] public string NOTAS         { get; set; } // blob sub_type 1

		#region Associations

		/// <summary>
		/// FK_INSUMO
		/// </summary>
		[Association(ThisKey="TIPOINSUMOID", OtherKey="TIPOINSUMOID", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_INSUMO", BackReferenceName="INSUMOes")]
		public TIPOINSUMO TIPOINSUMO { get; set; }

		#endregion
	}

	[Table("LOCALIDAD")]
	public partial class LOCALIDAD
	{
		[PrimaryKey, NotNull    ] public int    LOCALIDADID { get; set; } // integer
		[Column,        Nullable] public string NOMBRE      { get; set; } // varchar(100)
		[Column,        Nullable] public string ESTADO      { get; set; } // varchar(50)
		[Column,        Nullable] public string MUNICIPIO   { get; set; } // varchar(50)
		[Column,        Nullable] public string NOTAS       { get; set; } // blob sub_type 1

		#region Associations

		/// <summary>
		/// FK_AFECTADO_LOCALIDAD_BackReference
		/// </summary>
		[Association(ThisKey="LOCALIDADID", OtherKey="LOCALIDADID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AFECTADO> AFECTADOes { get; set; }

		#endregion
	}

	[Table("TIPOINSUMO")]
	public partial class TIPOINSUMO
	{
		[PrimaryKey, NotNull    ] public int    TIPOINSUMOID { get; set; } // integer
		[Column,        Nullable] public string NOMBRE       { get; set; } // varchar(100)

		#region Associations

		/// <summary>
		/// FK_AFECTADOREQ_TIPOINSUMO_BackReference
		/// </summary>
		[Association(ThisKey="TIPOINSUMOID", OtherKey="TIPOINSUMOID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<AFECTADOREQ> AFECTADOREQs { get; set; }

		/// <summary>
		/// FK_INSUMO_BackReference
		/// </summary>
		[Association(ThisKey="TIPOINSUMOID", OtherKey="TIPOINSUMOID", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<INSUMO> INSUMOes { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static AFECTADO Find(this ITable<AFECTADO> table, int AFECTADOID)
		{
			return table.FirstOrDefault(t =>
				t.AFECTADOID == AFECTADOID);
		}

		public static AFECTADOREQ Find(this ITable<AFECTADOREQ> table, int AFECTADOREQID)
		{
			return table.FirstOrDefault(t =>
				t.AFECTADOREQID == AFECTADOREQID);
		}

		public static COLABORADOR Find(this ITable<COLABORADOR> table, int COLABORADORID)
		{
			return table.FirstOrDefault(t =>
				t.COLABORADORID == COLABORADORID);
		}

		public static ENTRADA Find(this ITable<ENTRADA> table, int ENTRADAID)
		{
			return table.FirstOrDefault(t =>
				t.ENTRADAID == ENTRADAID);
		}

		public static INSUMO Find(this ITable<INSUMO> table, int INSUMOID)
		{
			return table.FirstOrDefault(t =>
				t.INSUMOID == INSUMOID);
		}

		public static LOCALIDAD Find(this ITable<LOCALIDAD> table, int LOCALIDADID)
		{
			return table.FirstOrDefault(t =>
				t.LOCALIDADID == LOCALIDADID);
		}

		public static TIPOINSUMO Find(this ITable<TIPOINSUMO> table, int TIPOINSUMOID)
		{
			return table.FirstOrDefault(t =>
				t.TIPOINSUMOID == TIPOINSUMOID);
		}
	}
}
